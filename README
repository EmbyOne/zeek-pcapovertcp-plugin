
# Zeek::PcapOverTcp

This plugin provides native PcapOverTcp support for Zeek. For details about PcapOverTcp, see the corresponding [Netresec URL](https://www.netresec.com/?page=Blog&month=2022-08&post=What-is-PCAP-over-IP)

## Installation


### Package Manager

The plugin is available as package for the [Zeek Package Manager](https://github.com/zeek/package-manager) and can be installed using the following command:

    zkg install zeek-pcapovertcp-plugin

### Manual Install

The following will compile and install the PcapOverTcp plugin alongside Zeek:

    # ./configure && make && make install

If everything built and installed correctly, you should see this:

    # zeek -NN Zeek::PcapOverTcp
    Zeek::PcapOverTcp - Packet acquisition via PcapOverTcp (dynamic, version 1.0.0)
    [Packet Source] PcapOverTcpReader (interface prefix "pcapovertcp"; supports live input)
    [Constant] PcapOverTcp::buffer_size

## Usage

Once installed, you can use PcapOverTcp interfaces/ports by prefixing them with `pcapovertcp::` on the command line. For example, to use PcapOverTcp to use local socket with port 57012:

    # zeek -i -i pcapovertcp::127.0.0.1:57012

### Permissions

To use PcapOverTcp, running Zeek without root privileges, the Zeek processes need the CAP_NET_RAW capability. You can set it with the following command (on each sensor, after `zeekctl install`):

    # setcap cap_net_raw+eip <path_to_zeek>/bin/zeek

## Usage with `zeekctl`

To use the PcapOverTcp plugin with `zeekctl`, the `custom` load balance method can be utilized. The following shows an exemplary configuration:

    [manager]
    type=manager
    host=localhost
     
    [proxy-1]
    type=proxy
    host=localhost
     
    [worker-1]
    type=worker
    host=localhost
    interface=pcapovertcp::127.0.0.1:57012
    # Optional parameters for per node configuration:
    pcapovertcp_buffer_size=128*1024*1024

## Advanced Configuration

While the plugin aims at providing a "plug and play" user experience, it exposes several configuration options of the underlying API for customization (see [init.zeek](scripts/init.zeek) for the default values):

* `buffer_size`: Set the overall buffer size allocated per socket. As the buffer is divided into blocks, this should be a multiple of the block size.

## Limitations

